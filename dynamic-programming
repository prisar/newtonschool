


[1, 3, 6, 4, 8]

find length of largest increasing subsequence

[1, 3]
[1, 6]
[1, 6, 4] - not increasing
[1, 3, 6, 8] - largest subsequence 


result = [1, 2, 3, 3, 4]



/* package whatever; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Ideone
{
	import java.util.*;

    public static void main(String[] args)
    {
        int num;
        Scanner sc = new Scanner(System.in);
        num = sc.nextInt();
        int[] arr = new int[num];
        
        for(int i=0;i<num;i++)
        {
            arr[i] = sc.nextInt();
        }
        int count=1,a=arr[0];
        
        // use a loop to iterate over the array 
        till that index and store the result in a result array

        int[] result = new int[num];
        for(int i=1;i<num;i++)
        {
            result[i] = 1;
            for (int  j = 0; j < i; j++) {
                if(arr[i]>arr[j] && result[j] >= result[i])
                {
                    result[i] = result[j] + 1;
                }
            }
            if (count < result[i])
                count = result[i];
        }
        
        System.out.println("Length of largest increasing subsequence:"+count);
        
    }
}
